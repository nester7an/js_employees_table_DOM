{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,aAAa,CAAC,SAC5B,EAAQ,EAAM,aAAa,CAAC,SAiJlC,EAAM,gBAAgB,CAAC,QA9IvB,SAAwB,CAAK,EAC3B,IAAM,EAAY,EAAM,MAAM,CAAC,OAAO,CAAC,MAEvC,GAAK,GAYL,GAAI,AAA0B,SAA1B,EAAU,WAAW,CAAa,CACpC,IAAM,EAAc,EAAM,gBAAgB,CAAC,MACrC,EAAmB,EAAG,GAE5B,EAAY,OAAO,CAAC,SAAC,CAArB,EACE,EAAI,MAAM,EACZ,GAEA,IAAM,EAAgB,EAAI,GAAiB,IAAI,CAAC,SAAC,CAAA,CAAM,CAAvD,EACE,IAAM,EAAU,EAAK,iBAAiB,CAChC,EAAU,EAAK,iBAAiB,CAEtC,OAAO,EAAQ,WAAW,CAAC,aAAa,CAAC,EAAQ,WAAW,CAC9D,GAEI,EAAe,EAAe,IAChC,EAAc,OAAO,GAGvB,EAAc,OAAO,CAAC,SAAC,CAAvB,EACE,EAAM,MAAM,CAAC,EACf,EACF,CAEA,GAAI,AAA0B,aAA1B,EAAU,WAAW,CAAiB,CACxC,IAAM,EAAc,EAAM,gBAAgB,CAAC,MACrC,EAAmB,EAAG,GAE5B,EAAY,OAAO,CAAC,SAAC,CAArB,EACE,EAAI,MAAM,EACZ,GAEA,IAAM,EAAoB,EAAI,GAAiB,IAAI,CAAC,SAAC,CAAA,CAAM,CAA3D,EACE,IAAM,EAAc,EAAK,QAAQ,CAAC,EAAE,CAC9B,EAAc,EAAK,QAAQ,CAAC,EAAE,CAEpC,OAAO,EAAY,WAAW,C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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// #region sort\nvar table = document.querySelector(\"table\");\nvar thead = table.querySelector(\"thead\");\nvar tbody = table.querySelector(\"tbody\");\n// eslint-disable-next-line no-shadow\nfunction clickOnHeaders(event) {\n    var currentTh = event.target.closest(\"th\");\n    if (!currentTh) return;\n    function arraysAreEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) return false;\n        return arr1.every(function(el, index) {\n            return el === arr2[index];\n        });\n    }\n    if (currentTh.textContent === \"Name\") {\n        var currentRows = tbody.querySelectorAll(\"tr\");\n        var currentRowsCopy = _to_consumable_array(currentRows);\n        currentRows.forEach(function(row) {\n            row.remove();\n        });\n        var sortedByNames = _to_consumable_array(currentRowsCopy).sort(function(row1, row2) {\n            var nameTd1 = row1.firstElementChild;\n            var nameTd2 = row2.firstElementChild;\n            return nameTd1.textContent.localeCompare(nameTd2.textContent);\n        });\n        if (arraysAreEqual(sortedByNames, currentRowsCopy)) sortedByNames.reverse();\n        sortedByNames.forEach(function(row) {\n            tbody.append(row);\n        });\n    }\n    if (currentTh.textContent === \"Position\") {\n        var currentRows1 = tbody.querySelectorAll(\"tr\");\n        var currentRowsCopy1 = _to_consumable_array(currentRows1);\n        currentRows1.forEach(function(row) {\n            row.remove();\n        });\n        var sortedByPositions = _to_consumable_array(currentRowsCopy1).sort(function(row1, row2) {\n            var positionTd1 = row1.children[1];\n            var positionTd2 = row2.children[1];\n            return positionTd1.textContent.localeCompare(positionTd2.textContent);\n        });\n        if (arraysAreEqual(sortedByPositions, currentRowsCopy1)) sortedByPositions.reverse();\n        sortedByPositions.forEach(function(row) {\n            tbody.append(row);\n        });\n    }\n    if (currentTh.textContent === \"Office\") {\n        var currentRows2 = tbody.querySelectorAll(\"tr\");\n        var currentRowsCopy2 = _to_consumable_array(currentRows2);\n        currentRows2.forEach(function(row) {\n            row.remove();\n        });\n        var sortedByOffices = _to_consumable_array(currentRowsCopy2).sort(function(row1, row2) {\n            var officeTd1 = row1.children[2];\n            var officeTd2 = row2.children[2];\n            return officeTd1.textContent.localeCompare(officeTd2.textContent);\n        });\n        if (arraysAreEqual(sortedByOffices, currentRowsCopy2)) sortedByOffices.reverse();\n        sortedByOffices.forEach(function(row) {\n            tbody.append(row);\n        });\n    }\n    if (currentTh.textContent === \"Age\") {\n        var currentRows3 = tbody.querySelectorAll(\"tr\");\n        var currentRowsCopy3 = _to_consumable_array(currentRows3);\n        currentRows3.forEach(function(row) {\n            row.remove();\n        });\n        var sortedByAges = _to_consumable_array(currentRowsCopy3).sort(function(row1, row2) {\n            var ageTd1 = row1.children[3];\n            var ageTd2 = row2.children[3];\n            return Number(ageTd2.textContent) - Number(ageTd1.textContent);\n        });\n        if (arraysAreEqual(sortedByAges, currentRowsCopy3)) sortedByAges.reverse();\n        sortedByAges.forEach(function(row) {\n            tbody.append(row);\n        });\n    }\n    function SToNumber(string) {\n        var filtredString = string.replace(/\\$/g, \"\").replace(/,/g, \"\");\n        return Number(filtredString);\n    }\n    if (currentTh.textContent === \"Salary\") {\n        var currentRows4 = tbody.querySelectorAll(\"tr\");\n        var currentRowsCopy4 = _to_consumable_array(currentRows4);\n        currentRows4.forEach(function(row) {\n            row.remove();\n        });\n        var sortedBySalaries = _to_consumable_array(currentRowsCopy4).sort(function(row1, row2) {\n            var salary1 = row1.children[4];\n            var salary2 = row2.children[4];\n            return SToNumber(salary2.textContent) - SToNumber(salary1.textContent);\n        });\n        if (arraysAreEqual(sortedBySalaries, currentRowsCopy4)) sortedBySalaries.reverse();\n        sortedBySalaries.forEach(function(row) {\n            tbody.append(row);\n        });\n    }\n}\nthead.addEventListener(\"click\", clickOnHeaders);\n// #endregion sort\n// #region active-tr\n// eslint-disable-next-line no-shadow\nfunction clickOnTr(event) {\n    var currentTr = event.target.closest(\"tr\");\n    if (!currentTr) return;\n    if (currentTr.classList.contains(\"active\")) {\n        currentTr.classList.remove(\"active\");\n        return;\n    }\n    var allRows = document.querySelectorAll(\"tbody tr\");\n    allRows.forEach(function(row) {\n        return row.classList.remove(\"active\");\n    });\n    currentTr.classList.add(\"active\");\n}\ntbody.addEventListener(\"click\", clickOnTr);\n// #endregion active-tr\n// #region add form\nvar body = document.body;\nvar newForm = document.createElement(\"form\");\nnewForm.classList.add(\"new-employee-form\");\nbody.append(newForm);\nnewForm.innerHTML = '\\n    <label>Name: <input required data-qa=\"name\" name=\"name\" type=\"text\"></label><br>\\n    <label>Position: <input required data-qa=\"position\" name=\"position\" type=\"text\"></label><br>\\n    <label>Office: <select required name=\"office\" data-qa=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select></label><br>\\n    <label>Age: <input required data-qa=\"age\" name=\"age\" type=\"number\" step=\"1\" min=\"18\" max=\"90\"></label><br>\\n    <label>Salary: <input required data-qa=\"salary\" name=\"salary\" type=\"text\"></label><br>\\n    <button type=\"submit\">Save to table</button>\\n';\nnewForm.style.zIndex = \"0\";\nvar formButton = newForm.querySelector(\"button\");\nvar employeeForm = document.querySelector(\".new-employee-form\");\n// eslint-disable-next-line no-shadow\nfunction clickOnButton(event) {\n    event.preventDefault();\n    var nameInput = employeeForm.querySelector('[data-qa=\"name\"]');\n    var positionInput = employeeForm.querySelector('[data-qa=\"position\"]');\n    var officeInput = employeeForm.querySelector('[data-qa=\"office\"]');\n    var ageInput = employeeForm.querySelector('[data-qa=\"age\"]');\n    var salaryInput = employeeForm.querySelector('[data-qa=\"salary\"]');\n    function isNameOrPosition(value) {\n        var trimValue = value.trim();\n        var regex = /^[a-zA-Z\\s]+$/;\n        return regex.test(trimValue);\n    }\n    function isValidName(value) {\n        if (typeof value === \"string\" && value.trim().length >= 4 && isNameOrPosition(value)) return true;\n        else return false;\n    }\n    function isValidPosition(value) {\n        if (typeof value === \"string\" && value.trim().length >= 1 && isNameOrPosition(value)) return true;\n        else return false;\n    }\n    function isValidAge(value) {\n        if (!isNaN(Number(value)) && value >= 18 && value <= 90) return true;\n        else return false;\n    }\n    function isValidSalary(value) {\n        if (!isNaN(Number(value))) return true;\n        else return false;\n    }\n    function numberToDollar(amount) {\n        var thousandString = Number(amount).toLocaleString(\"en-US\");\n        var characters = thousandString.split(\"\");\n        characters.unshift(\"$\");\n        var result = characters.join(\"\");\n        return result;\n    }\n    if (isValidName(nameInput.value) && isValidPosition(positionInput.value) && isValidAge(ageInput.value) && isValidSalary(salaryInput.value)) {\n        var newTr = document.createElement(\"tr\");\n        tbody.append(newTr);\n        var nameTd = document.createElement(\"td\");\n        var positionTd = document.createElement(\"td\");\n        var officeTd = document.createElement(\"td\");\n        var ageTd = document.createElement(\"td\");\n        var salaryTd = document.createElement(\"td\");\n        nameTd.textContent = nameInput.value;\n        positionTd.textContent = positionInput.value;\n        officeTd.textContent = officeInput.value;\n        ageTd.textContent = ageInput.value;\n        salaryTd.textContent = numberToDollar(salaryInput.value);\n        newTr.append(nameTd);\n        newTr.append(positionTd);\n        newTr.append(officeTd);\n        newTr.append(ageTd);\n        newTr.append(salaryTd);\n        pushNotification(10, 10, \"success\");\n    } else pushNotification(10, 10, \"error\");\n}\nformButton.addEventListener(\"click\", clickOnButton);\n// #endregion add form\n// #region notification\nvar pushNotification = function(posTop, posRight, type) {\n    var newDiv = document.createElement(\"div\");\n    var titleElem = document.createElement(\"h2\");\n    var descriptionELem = document.createElement(\"p\");\n    var style = document.createElement(\"style\");\n    style.innerHTML = \"\\n  .notification {\\n    position: fixed;\\n    width: 300px;\\n    min-height: 100px;\\n    padding: 0 16px;\\n    box-sizing: border-box;\\n    z-index: 2;\\n\\n    border-radius: 10px;\\n    background: rgba(132, 132, 132, 0.3);\\n\\n    top: 10px;\\n    right: 10px;\\n\\n    .title {\\n      display: block;\\n      font-size: 20px;\\n      font-weight: 900;\\n    }\\n\\n    &.success {\\n      background: rgba(10, 189, 0, 0.5);\\n    }\\n\\n    &.error {\\n      background: rgba(253, 0, 0, 0.5);\\n    }\\n  }\\n  \";\n    document.head.appendChild(style);\n    newDiv.className = \"notification\";\n    titleElem.className = \"title\";\n    descriptionELem.className = \"description\";\n    descriptionELem.style.whiteSpace = \"pre-wrap\";\n    document.body.prepend(newDiv);\n    newDiv.append(titleElem);\n    newDiv.append(descriptionELem);\n    if (type === \"success\") {\n        newDiv.classList.add(\"success\");\n        descriptionELem.textContent = \"The employee was successfully added to the table\";\n        titleElem.textContent = \"Successfully added\";\n    }\n    if (type === \"error\") {\n        newDiv.classList.add(\"error\");\n        descriptionELem.textContent = \"The employee was not added, please check the validity of the data\";\n        titleElem.textContent = \"Not valid data\";\n    }\n    newDiv.style.top = \"\".concat(posTop, \"px\");\n    newDiv.style.right = \"\".concat(posRight, \"px\");\n    setTimeout(function() {\n        newDiv.style.display = \"none\";\n    }, 3000);\n}; // #endregion notification\n\n//# sourceMappingURL=index.06e65b54.js.map\n","'use strict';\n\n// #region sort\n\nconst table = document.querySelector('table');\nconst thead = table.querySelector('thead');\nconst tbody = table.querySelector('tbody');\n\n// eslint-disable-next-line no-shadow\nfunction clickOnHeaders(event) {\n  const currentTh = event.target.closest('th');\n\n  if (!currentTh) {\n    return;\n  }\n\n  function arraysAreEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    return arr1.every((el, index) => el === arr2[index]);\n  }\n\n  if (currentTh.textContent === 'Name') {\n    const currentRows = tbody.querySelectorAll('tr');\n    const currentRowsCopy = [...currentRows];\n\n    currentRows.forEach((row) => {\n      row.remove();\n    });\n\n    const sortedByNames = [...currentRowsCopy].sort((row1, row2) => {\n      const nameTd1 = row1.firstElementChild;\n      const nameTd2 = row2.firstElementChild;\n\n      return nameTd1.textContent.localeCompare(nameTd2.textContent);\n    });\n\n    if (arraysAreEqual(sortedByNames, currentRowsCopy)) {\n      sortedByNames.reverse();\n    }\n\n    sortedByNames.forEach((row) => {\n      tbody.append(row);\n    });\n  }\n\n  if (currentTh.textContent === 'Position') {\n    const currentRows = tbody.querySelectorAll('tr');\n    const currentRowsCopy = [...currentRows];\n\n    currentRows.forEach((row) => {\n      row.remove();\n    });\n\n    const sortedByPositions = [...currentRowsCopy].sort((row1, row2) => {\n      const positionTd1 = row1.children[1];\n      const positionTd2 = row2.children[1];\n\n      return positionTd1.textContent.localeCompare(positionTd2.textContent);\n    });\n\n    if (arraysAreEqual(sortedByPositions, currentRowsCopy)) {\n      sortedByPositions.reverse();\n    }\n\n    sortedByPositions.forEach((row) => {\n      tbody.append(row);\n    });\n  }\n\n  if (currentTh.textContent === 'Office') {\n    const currentRows = tbody.querySelectorAll('tr');\n    const currentRowsCopy = [...currentRows];\n\n    currentRows.forEach((row) => {\n      row.remove();\n    });\n\n    const sortedByOffices = [...currentRowsCopy].sort((row1, row2) => {\n      const officeTd1 = row1.children[2];\n      const officeTd2 = row2.children[2];\n\n      return officeTd1.textContent.localeCompare(officeTd2.textContent);\n    });\n\n    if (arraysAreEqual(sortedByOffices, currentRowsCopy)) {\n      sortedByOffices.reverse();\n    }\n\n    sortedByOffices.forEach((row) => {\n      tbody.append(row);\n    });\n  }\n\n  if (currentTh.textContent === 'Age') {\n    const currentRows = tbody.querySelectorAll('tr');\n    const currentRowsCopy = [...currentRows];\n\n    currentRows.forEach((row) => {\n      row.remove();\n    });\n\n    const sortedByAges = [...currentRowsCopy].sort((row1, row2) => {\n      const ageTd1 = row1.children[3];\n      const ageTd2 = row2.children[3];\n\n      return Number(ageTd2.textContent) - Number(ageTd1.textContent);\n    });\n\n    if (arraysAreEqual(sortedByAges, currentRowsCopy)) {\n      sortedByAges.reverse();\n    }\n\n    sortedByAges.forEach((row) => {\n      tbody.append(row);\n    });\n  }\n\n  function SToNumber(string) {\n    const filtredString = string.replace(/\\$/g, '').replace(/,/g, '');\n\n    return Number(filtredString);\n  }\n\n  if (currentTh.textContent === 'Salary') {\n    const currentRows = tbody.querySelectorAll('tr');\n    const currentRowsCopy = [...currentRows];\n\n    currentRows.forEach((row) => {\n      row.remove();\n    });\n\n    const sortedBySalaries = [...currentRowsCopy].sort((row1, row2) => {\n      const salary1 = row1.children[4];\n      const salary2 = row2.children[4];\n\n      return SToNumber(salary2.textContent) - SToNumber(salary1.textContent);\n    });\n\n    if (arraysAreEqual(sortedBySalaries, currentRowsCopy)) {\n      sortedBySalaries.reverse();\n    }\n\n    sortedBySalaries.forEach((row) => {\n      tbody.append(row);\n    });\n  }\n}\n\nthead.addEventListener('click', clickOnHeaders);\n\n// #endregion sort\n\n// #region active-tr\n\n// eslint-disable-next-line no-shadow\nfunction clickOnTr(event) {\n  const currentTr = event.target.closest('tr');\n\n  if (!currentTr) {\n    return;\n  }\n\n  if (currentTr.classList.contains('active')) {\n    currentTr.classList.remove('active');\n\n    return;\n  }\n\n  const allRows = document.querySelectorAll('tbody tr');\n\n  allRows.forEach((row) => row.classList.remove('active'));\n\n  currentTr.classList.add('active');\n}\n\ntbody.addEventListener('click', clickOnTr);\n\n// #endregion active-tr\n\n// #region add form\n\nconst body = document.body;\nconst newForm = document.createElement('form');\n\nnewForm.classList.add('new-employee-form');\n\nbody.append(newForm);\n\nnewForm.innerHTML = `\n    <label>Name: <input required data-qa=\"name\" name=\"name\" type=\"text\"></label><br>\n    <label>Position: <input required data-qa=\"position\" name=\"position\" type=\"text\"></label><br>\n    <label>Office: <select required name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select></label><br>\n    <label>Age: <input required data-qa=\"age\" name=\"age\" type=\"number\" step=\"1\" min=\"18\" max=\"90\"></label><br>\n    <label>Salary: <input required data-qa=\"salary\" name=\"salary\" type=\"text\"></label><br>\n    <button type=\"submit\">Save to table</button>\n`;\n\nnewForm.style.zIndex = '0';\n\nconst formButton = newForm.querySelector('button');\nconst employeeForm = document.querySelector('.new-employee-form');\n\n// eslint-disable-next-line no-shadow\nfunction clickOnButton(event) {\n  event.preventDefault();\n\n  const nameInput = employeeForm.querySelector('[data-qa=\"name\"]');\n  const positionInput = employeeForm.querySelector('[data-qa=\"position\"]');\n  const officeInput = employeeForm.querySelector('[data-qa=\"office\"]');\n  const ageInput = employeeForm.querySelector('[data-qa=\"age\"]');\n  const salaryInput = employeeForm.querySelector('[data-qa=\"salary\"]');\n\n  function isNameOrPosition(value) {\n    const trimValue = value.trim();\n    const regex = /^[a-zA-Z\\s]+$/;\n\n    return regex.test(trimValue);\n  }\n\n  function isValidName(value) {\n    if (\n      typeof value === 'string' &&\n      value.trim().length >= 4 &&\n      isNameOrPosition(value)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function isValidPosition(value) {\n    if (\n      typeof value === 'string' &&\n      value.trim().length >= 1 &&\n      isNameOrPosition(value)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function isValidAge(value) {\n    if (!isNaN(Number(value)) && value >= 18 && value <= 90) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function isValidSalary(value) {\n    if (!isNaN(Number(value))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function numberToDollar(amount) {\n    const thousandString = Number(amount).toLocaleString('en-US');\n\n    const characters = thousandString.split('');\n\n    characters.unshift('$');\n\n    const result = characters.join('');\n\n    return result;\n  }\n\n  if (\n    isValidName(nameInput.value) &&\n    isValidPosition(positionInput.value) &&\n    isValidAge(ageInput.value) &&\n    isValidSalary(salaryInput.value)\n  ) {\n    const newTr = document.createElement('tr');\n\n    tbody.append(newTr);\n\n    const nameTd = document.createElement('td');\n    const positionTd = document.createElement('td');\n    const officeTd = document.createElement('td');\n    const ageTd = document.createElement('td');\n    const salaryTd = document.createElement('td');\n\n    nameTd.textContent = nameInput.value;\n    positionTd.textContent = positionInput.value;\n    officeTd.textContent = officeInput.value;\n    ageTd.textContent = ageInput.value;\n    salaryTd.textContent = numberToDollar(salaryInput.value);\n\n    newTr.append(nameTd);\n    newTr.append(positionTd);\n    newTr.append(officeTd);\n    newTr.append(ageTd);\n    newTr.append(salaryTd);\n\n    pushNotification(10, 10, 'success');\n  } else {\n    pushNotification(10, 10, 'error');\n  }\n}\n\nformButton.addEventListener('click', clickOnButton);\n\n// #endregion add form\n\n// #region notification\n\nconst pushNotification = (posTop, posRight, type) => {\n  const newDiv = document.createElement('div');\n  const titleElem = document.createElement('h2');\n  const descriptionELem = document.createElement('p');\n  const style = document.createElement('style');\n\n  style.innerHTML = `\n  .notification {\n    position: fixed;\n    width: 300px;\n    min-height: 100px;\n    padding: 0 16px;\n    box-sizing: border-box;\n    z-index: 2;\n\n    border-radius: 10px;\n    background: rgba(132, 132, 132, 0.3);\n\n    top: 10px;\n    right: 10px;\n\n    .title {\n      display: block;\n      font-size: 20px;\n      font-weight: 900;\n    }\n\n    &.success {\n      background: rgba(10, 189, 0, 0.5);\n    }\n\n    &.error {\n      background: rgba(253, 0, 0, 0.5);\n    }\n  }\n  `;\n\n  document.head.appendChild(style);\n\n  newDiv.className = 'notification';\n  titleElem.className = 'title';\n  descriptionELem.className = 'description';\n\n  descriptionELem.style.whiteSpace = 'pre-wrap';\n\n  document.body.prepend(newDiv);\n  newDiv.append(titleElem);\n  newDiv.append(descriptionELem);\n\n  if (type === 'success') {\n    newDiv.classList.add('success');\n\n    descriptionELem.textContent =\n      'The employee was successfully added to the table';\n    titleElem.textContent = 'Successfully added';\n  }\n\n  if (type === 'error') {\n    newDiv.classList.add('error');\n\n    descriptionELem.textContent =\n      'The employee was not added, please check the validity of the data';\n    titleElem.textContent = 'Not valid data';\n  }\n\n  newDiv.style.top = `${posTop}px`;\n  newDiv.style.right = `${posRight}px`;\n\n  setTimeout(() => {\n    newDiv.style.display = 'none';\n  }, 3000);\n};\n// #endregion notification\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","thead","tbody","addEventListener","event","currentTh","target","closest","textContent","currentRows","querySelectorAll","currentRowsCopy","forEach","row","remove","sortedByNames","sort","row1","row2","nameTd1","firstElementChild","nameTd2","localeCompare","arraysAreEqual","reverse","append","currentRows1","currentRowsCopy1","sortedByPositions","positionTd1","children","positionTd2","currentRows2","currentRowsCopy2","sortedByOffices","officeTd1","officeTd2","currentRows3","currentRowsCopy3","sortedByAges","ageTd1","Number","ageTd2","currentRows4","currentRowsCopy4","sortedBySalaries","salary1","SToNumber","salary2","arr1","every","el","index","string","replace","currentTr","classList","contains","allRows","add","body","newForm","createElement","innerHTML","style","zIndex","formButton","employeeForm","preventDefault","nameInput","positionInput","officeInput","ageInput","salaryInput","isNameOrPosition","value","trimValue","trim","regex","isValidName","isNaN","pushNotification","characters","newTr","nameTd","positionTd","officeTd","ageTd","salaryTd","thousandString","toLocaleString","split","unshift","join","posTop","posRight","type","newDiv","titleElem","descriptionELem","head","appendChild","className","whiteSpace","prepend","top","concat","right","setTimeout","display"],"version":3,"file":"index.06e65b54.js.map"}